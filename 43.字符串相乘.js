/*
 * @lc app=leetcode.cn id=43 lang=javascript
 *
 * [43] 字符串相乘
 */

// @lc code=start
/**
 * @param {string} num1
 * @param {string} num2
 * @return {string}
 */
var multiply = function(num1, num2) {
  if (num1 === '0' || num2 === '0') return '0';
  if (num1 === '1') return num2;
  if (num2 === '1') return num1;
  let mul = [
    ['00', '00', '00', '00', '00', '00', '00', '00', '00', '00'],
    ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09'],
    ['00', '02', '04', '06', '08', '10', '12', '14', '16', '18'],
    ['00', '03', '06', '09', '12', '15', '18', '21', '24', '27'],
    ['00', '04', '08', '12', '16', '20', '24', '28', '32', '36'],
    ['00', '05', '10', '15', '20', '25', '30', '35', '40', '45'],
    ['00', '06', '12', '18', '24', '30', '36', '42', '48', '54'],
    ['00', '07', '14', '21', '28', '35', '42', '49', '56', '63'],
    ['00', '08', '16', '24', '32', '40', '48', '56', '64', '72'],
    ['00', '09', '18', '27', '36', '45', '54', '63', '72', '81'],
  ];
  let plus = [
    ['00', '01', '02', '03', '04', '05', '06', '07', '08', '09'],
    ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10'],
    ['02', '03', '04', '05', '06', '07', '08', '09', '10', '11'],
    ['03', '04', '05', '06', '07', '08', '09', '10', '11', '12'],
    ['04', '05', '06', '07', '08', '09', '10', '11', '12', '13'],
    ['05', '06', '07', '08', '09', '10', '11', '12', '13', '14'],
    ['06', '07', '08', '09', '10', '11', '12', '13', '14', '15'],
    ['07', '08', '09', '10', '11', '12', '13', '14', '15', '16'],
    ['08', '09', '10', '11', '12', '13', '14', '15', '16', '17'],
    ['09', '10', '11', '12', '13', '14', '15', '16', '17', '18'],
  ];
  let len1 = num1.length;
  let len2 = num2.length;
  let result = new Array(len1 + len2).fill('0');
  for (let i = len1 - 1; i >= 0; i--) {
    for (let j = len2 - 1; j >= 0; j--) {
      let mulResult = mul[num1[i]][num2[j]];
      let plusResult = plus[result[i + j + 1]][mulResult[1]];
      let jin = plusResult[0];
      for (let k = 1; jin !== '0'; k++) {
        let temp = plus[jin][result[i + j + 1 - k]];
        result[i + j + 1 - k] = temp[1];
        jin = temp[0];
      }
      result[i + j + 1] = plusResult[1];
      plusResult = plus[result[i + j]][mulResult[0]];
      jin = plusResult[0];
      for (let k = 1; jin !== '0'; k++) {
        let temp = plus[jin][result[i + j - k]];
        result[i + j - k] = temp[1];
        jin = temp[0];
      }
      result[i + j] = plusResult[1];
    }
  }
  return result[0] === '0' ? result.slice(1).join('') : result.join('');
};
// @lc code=end

